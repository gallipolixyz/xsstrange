{
  "title": "Basic Reflected XSS - PHP Search Form",
  "description": "This test demonstrates a simple reflected XSS vulnerability in a PHP search form. User input from URL parameters is directly reflected in the page without proper sanitization, allowing attackers to inject malicious scripts.",
  "objectives": [
    "Identify the reflected XSS vector in the search parameter.",
    "Craft a malicious URL to execute JavaScript code.",
    "Understand how reflected XSS can be exploited in PHP applications.",
    "Compare PHP-based XSS with client-side XSS."
  ],
  "hints": [
    "Try injecting a <script> tag in the search parameter.",
    "Check how the search term is displayed on the page.",
    "Look at the URL parameters after submitting the form.",
    "Notice the difference between client-side and server-side reflection."
  ],
  "difficulty": "beginner",
  "category": "reflected",
  "risk": "medium",
  "status": "active",
  "type": "php",
  "php": "<?php\n// Basic Reflected XSS - PHP Search Form\n// This demonstrates a reflected XSS vulnerability in PHP\n\n$query = isset($_GET['q']) ? $_GET['q'] : '';\n$results = '';\n\nif ($query) {\n    $results = \"<h3>Search Results:</h3>\";\n    $results .= \"<p>\\\"$query\\\" search results:</p>\";\n    $results .= \"<div class='search-results'>No results found.</div>\";\n}\n?>\n\n<!DOCTYPE html>\n<html>\n<body>\n    <div class=\"search-container\">\n        <h2>PHP Search Engine</h2>\n        <form method=\"GET\" action=\"\">\n            <label for=\"q\">Search Term:</label>\n            <input type=\"text\" id=\"q\" name=\"q\" placeholder=\"Enter a search term...\" value=\"<?php echo $query; ?>\">\n            <button type=\"submit\">Search</button>\n        </form>\n        \n        <div id=\"results\">\n            <?php echo $results; ?>\n        </div>\n    </div>\n</body>\n</html>"
}